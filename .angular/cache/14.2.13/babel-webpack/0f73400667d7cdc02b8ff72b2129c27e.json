{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { ClassProvider, FactoryProvider, InjectionToken } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport function _window() {\n  return window;\n}\nexport var WINDOW = new InjectionToken(\"WindowToken\");\nexport var WindowRef = /*#__PURE__*/function () {\n  function WindowRef() {\n    _classCallCheck(this, WindowRef);\n  }\n  return _createClass(WindowRef, [{\n    key: \"nativeWindow\",\n    get: function get() {\n      throw new Error(\"Not implemented.\");\n    }\n  }]);\n}();\nexport var BrowserWindowRef = /*#__PURE__*/(function () {\n  var BrowserWindowRef = /*#__PURE__*/function (_WindowRef) {\n    function BrowserWindowRef() {\n      _classCallCheck(this, BrowserWindowRef);\n      return _callSuper(this, BrowserWindowRef);\n    }\n    _inherits(BrowserWindowRef, _WindowRef);\n    return _createClass(BrowserWindowRef, [{\n      key: \"nativeWindow\",\n      get: function get() {\n        return _window();\n      }\n    }]);\n  }(WindowRef);\n  BrowserWindowRef.ɵfac = function BrowserWindowRef_Factory(t) {\n    return new (t || BrowserWindowRef)();\n  };\n  BrowserWindowRef.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BrowserWindowRef,\n    factory: BrowserWindowRef.ɵfac\n  });\n  return BrowserWindowRef;\n})();\nvar browserWindowProvider = {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n};\nexport var windowProvider = {\n  provide: WINDOW,\n  useFactory: _window,\n  deps: []\n};\nexport var WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];","map":null,"metadata":{},"sourceType":"module"}