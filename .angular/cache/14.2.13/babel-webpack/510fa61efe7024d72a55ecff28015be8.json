{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createClass from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, EventEmitter, isDevMode, PLATFORM_ID, ElementRef, Component, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, ContentChild, HostBinding, NgModule } from '@angular/core';\nimport { Subject, Observable, of, fromEvent, interval, merge, EMPTY } from 'rxjs';\nimport { takeUntil, mapTo, startWith, switchMap } from 'rxjs/operators';\nvar _c0 = [\"ngucarousel\"];\nvar _c1 = [\"nguItemsContainer\"];\nvar _c2 = [\"touchContainer\"];\nvar _c3 = [[[\"\", \"NguCarouselPrev\", \"\"]], [[\"\", \"NguCarouselNext\", \"\"]], [[\"\", \"NguCarouselPoint\", \"\"]]];\nvar _c4 = [\"[NguCarouselPrev]\", \"[NguCarouselNext]\", \"[NguCarouselPoint]\"];\nvar _c5 = [\"*\"];\nvar NguCarouselStore = /*#__PURE__*/_createClass(function NguCarouselStore() {\n  var touch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Touch();\n  var vertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vertical();\n  var interval = arguments.length > 2 ? arguments[2] : undefined;\n  var transform = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Transfrom();\n  var button = arguments.length > 4 ? arguments[4] : undefined;\n  var visibleItems = arguments.length > 5 ? arguments[5] : undefined;\n  var deviceType = arguments.length > 6 ? arguments[6] : undefined;\n  var type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'fixed';\n  var token = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : '';\n  var items = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;\n  var load = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n  var deviceWidth = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 0;\n  var carouselWidth = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 0;\n  var itemWidth = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : 0;\n  var slideItems = arguments.length > 14 && arguments[14] !== undefined ? arguments[14] : 0;\n  var itemWidthPer = arguments.length > 15 && arguments[15] !== undefined ? arguments[15] : 0;\n  var itemLength = arguments.length > 16 && arguments[16] !== undefined ? arguments[16] : 0;\n  var currentSlide = arguments.length > 17 && arguments[17] !== undefined ? arguments[17] : 0;\n  var easing = arguments.length > 18 && arguments[18] !== undefined ? arguments[18] : 'cubic-bezier(0, 0, 0.2, 1)';\n  var speed = arguments.length > 19 && arguments[19] !== undefined ? arguments[19] : 200;\n  var loop = arguments.length > 20 && arguments[20] !== undefined ? arguments[20] : false;\n  var dexVal = arguments.length > 21 && arguments[21] !== undefined ? arguments[21] : 0;\n  var touchTransform = arguments.length > 22 && arguments[22] !== undefined ? arguments[22] : 0;\n  var isEnd = arguments.length > 23 && arguments[23] !== undefined ? arguments[23] : false;\n  var isFirst = arguments.length > 24 && arguments[24] !== undefined ? arguments[24] : true;\n  var isLast = arguments.length > 25 && arguments[25] !== undefined ? arguments[25] : false;\n  var RTL = arguments.length > 26 && arguments[26] !== undefined ? arguments[26] : false;\n  var point = arguments.length > 27 && arguments[27] !== undefined ? arguments[27] : true;\n  var velocity = arguments.length > 28 && arguments[28] !== undefined ? arguments[28] : 1;\n  _classCallCheck(this, NguCarouselStore);\n  this.touch = touch;\n  this.vertical = vertical;\n  this.interval = interval;\n  this.transform = transform;\n  this.button = button;\n  this.visibleItems = visibleItems;\n  this.deviceType = deviceType;\n  this.type = type;\n  this.token = token;\n  this.items = items;\n  this.load = load;\n  this.deviceWidth = deviceWidth;\n  this.carouselWidth = carouselWidth;\n  this.itemWidth = itemWidth;\n  this.slideItems = slideItems;\n  this.itemWidthPer = itemWidthPer;\n  this.itemLength = itemLength;\n  this.currentSlide = currentSlide;\n  this.easing = easing;\n  this.speed = speed;\n  this.loop = loop;\n  this.dexVal = dexVal;\n  this.touchTransform = touchTransform;\n  this.isEnd = isEnd;\n  this.isFirst = isFirst;\n  this.isLast = isLast;\n  this.RTL = RTL;\n  this.point = point;\n  this.velocity = velocity;\n});\nvar ItemsControl = /*#__PURE__*/_createClass(function ItemsControl() {\n  _classCallCheck(this, ItemsControl);\n});\nvar Vertical = /*#__PURE__*/_createClass(function Vertical() {\n  _classCallCheck(this, Vertical);\n});\nvar NguButton = /*#__PURE__*/_createClass(function NguButton() {\n  _classCallCheck(this, NguButton);\n});\nvar Touch = /*#__PURE__*/_createClass(function Touch() {\n  _classCallCheck(this, Touch);\n});\nvar Transfrom = /*#__PURE__*/_createClass(function Transfrom() {\n  var xs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var sm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var md = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var lg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var all = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  _classCallCheck(this, Transfrom);\n  this.xs = xs;\n  this.sm = sm;\n  this.md = md;\n  this.lg = lg;\n  this.all = all;\n  this.xl = 0;\n});\n/**\n * Default values\n * {sm: 768, md: 992, lg: 1200, xl: 1200}\n *\n * Bootstrap values:\n * {sm: 576, md: 768, lg: 992, xl: 1200}\n */\nvar Breakpoints = /*#__PURE__*/_createClass(function Breakpoints() {\n  var sm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 768;\n  var md = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 992;\n  var lg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1200;\n  var xl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1200;\n  _classCallCheck(this, Breakpoints);\n  this.sm = sm;\n  this.md = md;\n  this.lg = lg;\n  this.xl = xl;\n});\nvar NguCarouselConfig = /*#__PURE__*/_createClass(function NguCarouselConfig() {\n  _classCallCheck(this, NguCarouselConfig);\n});\nvar NguCarouselOutletContext = /*#__PURE__*/_createClass(function NguCarouselOutletContext(data) {\n  _classCallCheck(this, NguCarouselOutletContext);\n  this.$implicit = data;\n});\nvar NguCarouselItemDirective = /*#__PURE__*/(function () {\n  var NguCarouselItemDirective = /*#__PURE__*/_createClass(function NguCarouselItemDirective() {\n    _classCallCheck(this, NguCarouselItemDirective);\n  });\n  NguCarouselItemDirective.ɵfac = function NguCarouselItemDirective_Factory(t) {\n    return new (t || NguCarouselItemDirective)();\n  };\n  NguCarouselItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NguCarouselItemDirective,\n    selectors: [[\"\", \"NguCarouselItem\", \"\"]]\n  });\n  return NguCarouselItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguCarouselNextDirective = /*#__PURE__*/(function () {\n  var NguCarouselNextDirective = /*#__PURE__*/_createClass(function NguCarouselNextDirective() {\n    _classCallCheck(this, NguCarouselNextDirective);\n  });\n  NguCarouselNextDirective.ɵfac = function NguCarouselNextDirective_Factory(t) {\n    return new (t || NguCarouselNextDirective)();\n  };\n  NguCarouselNextDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NguCarouselNextDirective,\n    selectors: [[\"\", \"NguCarouselNext\", \"\"]]\n  });\n  return NguCarouselNextDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguCarouselPrevDirective = /*#__PURE__*/(function () {\n  var NguCarouselPrevDirective = /*#__PURE__*/_createClass(function NguCarouselPrevDirective() {\n    _classCallCheck(this, NguCarouselPrevDirective);\n  });\n  NguCarouselPrevDirective.ɵfac = function NguCarouselPrevDirective_Factory(t) {\n    return new (t || NguCarouselPrevDirective)();\n  };\n  NguCarouselPrevDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NguCarouselPrevDirective,\n    selectors: [[\"\", \"NguCarouselPrev\", \"\"]]\n  });\n  return NguCarouselPrevDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguCarouselPointDirective = /*#__PURE__*/(function () {\n  var NguCarouselPointDirective = /*#__PURE__*/_createClass(function NguCarouselPointDirective() {\n    _classCallCheck(this, NguCarouselPointDirective);\n  });\n  NguCarouselPointDirective.ɵfac = function NguCarouselPointDirective_Factory(t) {\n    return new (t || NguCarouselPointDirective)();\n  };\n  NguCarouselPointDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NguCarouselPointDirective,\n    selectors: [[\"\", \"NguCarouselPoint\", \"\"]]\n  });\n  return NguCarouselPointDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguCarouselDefDirective = /*#__PURE__*/(function () {\n  var NguCarouselDefDirective = /*#__PURE__*/_createClass(function NguCarouselDefDirective(template) {\n    _classCallCheck(this, NguCarouselDefDirective);\n    this.template = template;\n  });\n  NguCarouselDefDirective.ɵfac = function NguCarouselDefDirective_Factory(t) {\n    return new (t || NguCarouselDefDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  NguCarouselDefDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NguCarouselDefDirective,\n    selectors: [[\"\", \"nguCarouselDef\", \"\"]]\n  });\n  return NguCarouselDefDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nvar NguCarouselOutlet = /*#__PURE__*/(function () {\n  var NguCarouselOutlet = /*#__PURE__*/_createClass(function NguCarouselOutlet(viewContainer) {\n    _classCallCheck(this, NguCarouselOutlet);\n    this.viewContainer = viewContainer;\n  });\n  NguCarouselOutlet.ɵfac = function NguCarouselOutlet_Factory(t) {\n    return new (t || NguCarouselOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  NguCarouselOutlet.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NguCarouselOutlet,\n    selectors: [[\"\", \"nguCarouselOutlet\", \"\"]]\n  });\n  return NguCarouselOutlet;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// @dynamic\n// @dynamic\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nvar NguCarousel = /*#__PURE__*/(function () {\n  var NguCarousel = /*#__PURE__*/function (_NguCarouselStore) {\n    function NguCarousel(_el, _renderer, _differs, platformId, cdr) {\n      var _this;\n      _classCallCheck(this, NguCarousel);\n      _this = _callSuper(this, NguCarousel);\n      _this._el = _el;\n      _this._renderer = _renderer;\n      _this._differs = _differs;\n      _this.platformId = platformId;\n      _this.cdr = cdr;\n      _this.withAnim = true;\n      _this.isHovered = false;\n      _this.carouselLoad = new EventEmitter();\n      // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n      _this.onMove = new EventEmitter();\n      _this._intervalController$ = new Subject();\n      _this.pointNumbers = [];\n      return _this;\n    }\n    _inherits(NguCarousel, _NguCarouselStore);\n    return _createClass(NguCarousel, [{\n      key: \"dataSource\",\n      get: function get() {\n        return this._dataSource;\n      },\n      set: function set(data) {\n        if (data) {\n          this._switchDataSource(data);\n        }\n      }\n      /** The setter is used to catch the button if the button has ngIf\n       * issue id #91\n       */\n    }, {\n      key: \"nextBtn\",\n      set: function set(btn) {\n        var _this2 = this;\n        var _a;\n        (_a = this.listener2) === null || _a === void 0 ? void 0 : _a.call(this);\n        if (btn) {\n          this.listener2 = this._renderer.listen(btn.nativeElement, 'click', function () {\n            return _this2._carouselScrollOne(1);\n          });\n        }\n      }\n      /** The setter is used to catch the button if the button has ngIf\n       * issue id #91\n       */\n    }, {\n      key: \"prevBtn\",\n      set: function set(btn) {\n        var _this3 = this;\n        var _a;\n        (_a = this.listener1) === null || _a === void 0 ? void 0 : _a.call(this);\n        if (btn) {\n          this.listener1 = this._renderer.listen(btn.nativeElement, 'click', function () {\n            return _this3._carouselScrollOne(0);\n          });\n        }\n      }\n      /**\n       * Tracking function that will be used to check the differences in data changes. Used similarly\n       * to `ngFor` `trackBy` function. Optimize Items operations by identifying a Items based on its data\n       * relative to the function to know if a Items should be added/removed/moved.\n       * Accepts a function that takes two parameters, `index` and `item`.\n       */\n    }, {\n      key: \"trackBy\",\n      get: function get() {\n        return this._trackByFn;\n      },\n      set: function set(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && console && console.warn) {\n          console.warn(\"trackBy must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n        }\n        this._trackByFn = fn;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this4 = this;\n        this._dataDiffer = this._differs.find([]).create(function (_i, item) {\n          return _this4.trackBy ? _this4.trackBy(_i, item) : item;\n        });\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this.arrayChanges = this._dataDiffer.diff(this.dataSource);\n        if (this.arrayChanges && this._defDirec) {\n          this._observeRenderChanges();\n        }\n      }\n    }, {\n      key: \"_switchDataSource\",\n      value: function _switchDataSource(dataSource) {\n        this._dataSource = dataSource;\n        if (this._defDirec) {\n          this._observeRenderChanges();\n        }\n      }\n    }, {\n      key: \"_observeRenderChanges\",\n      value: function _observeRenderChanges() {\n        var _this5 = this;\n        var dataStream;\n        if (this._dataSource instanceof Observable) {\n          dataStream = this._dataSource;\n        } else if (Array.isArray(this._dataSource)) {\n          dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n          this._dataSubscription = dataStream.pipe(takeUntil(this._intervalController$)).subscribe(function (data) {\n            _this5.renderNodeChanges(data);\n            _this5.isLast = _this5.pointIndex === _this5.currentSlide;\n          });\n        }\n      }\n    }, {\n      key: \"renderNodeChanges\",\n      value: function renderNodeChanges(data) {\n        var _this6 = this;\n        var viewContainer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._nodeOutlet.viewContainer;\n        if (!this.arrayChanges) return;\n        this.arrayChanges.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n          var node = _this6._getNodeDef(data[currentIndex], currentIndex);\n          if (item.previousIndex == null) {\n            var context = new NguCarouselOutletContext(data[currentIndex]);\n            context.index = currentIndex;\n            viewContainer.createEmbeddedView(node.template, context, currentIndex);\n          } else if (currentIndex == null) {\n            viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            var view = viewContainer.get(adjustedPreviousIndex);\n            viewContainer.move(view, currentIndex);\n          }\n        });\n        this._updateItemIndexContext();\n        if (this.carousel) {\n          this._storeCarouselData();\n        }\n      }\n      /**\n       * Updates the index-related context for each row to reflect any changes in the index of the rows,\n       * e.g. first/last/even/odd.\n       */\n    }, {\n      key: \"_updateItemIndexContext\",\n      value: function _updateItemIndexContext() {\n        var viewContainer = this._nodeOutlet.viewContainer;\n        for (var renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n          var viewRef = viewContainer.get(renderIndex);\n          var context = viewRef.context;\n          context.count = count;\n          context.first = renderIndex === 0;\n          context.last = renderIndex === count - 1;\n          context.even = renderIndex % 2 === 0;\n          context.odd = !context.even;\n          context.index = renderIndex;\n        }\n      }\n    }, {\n      key: \"_getNodeDef\",\n      value: function _getNodeDef(data, i) {\n        if (this._defDirec.length === 1) {\n          return this._defDirec.first;\n        }\n        var nodeDef = this._defDirec.find(function (def) {\n          return def.when && def.when(i, data);\n        }) || this._defaultNodeDef;\n        return nodeDef;\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this7 = this;\n        this.carousel = this._el.nativeElement;\n        this._inputValidation();\n        this.carouselCssNode = this._createStyleElem();\n        if (isPlatformBrowser(this.platformId)) {\n          this._carouselInterval();\n          if (!this.vertical.enabled) {\n            this._touch();\n          }\n          this.listener3 = this._renderer.listen('window', 'resize', function (event) {\n            _this7._onResizing(event);\n          });\n          this._onWindowScrolling();\n        }\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        this._observeRenderChanges();\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"_inputValidation\",\n      value: function _inputValidation() {\n        this.inputs.gridBreakpoints = this.inputs.gridBreakpoints ? this.inputs.gridBreakpoints : new Breakpoints();\n        if (this.inputs.grid.xl === undefined) {\n          this.inputs.grid.xl = this.inputs.grid.lg;\n        }\n        this.type = this.inputs.grid.all !== 0 ? 'fixed' : 'responsive';\n        this.loop = this.inputs.loop || false;\n        this.inputs.easing = this.inputs.easing || 'cubic-bezier(0, 0, 0.2, 1)';\n        this.touch.active = this.inputs.touch || false;\n        this.RTL = this.inputs.RTL ? true : false;\n        this.interval = this.inputs.interval || null;\n        this.velocity = typeof this.inputs.velocity === 'number' ? this.inputs.velocity : this.velocity;\n        if (this.inputs.vertical && this.inputs.vertical.enabled) {\n          this.vertical.enabled = this.inputs.vertical.enabled;\n          this.vertical.height = this.inputs.vertical.height;\n        }\n        this.directionSym = this.RTL ? '' : '-';\n        this.point = this.inputs.point && typeof this.inputs.point.visible !== 'undefined' ? this.inputs.point.visible : true;\n        this._carouselSize();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.carouselInt && this.carouselInt.unsubscribe();\n        this._intervalController$.unsubscribe();\n        this.carouselLoad.complete();\n        this.onMove.complete();\n        /** remove listeners */\n        clearTimeout(this.onScrolling);\n        for (var i = 1; i <= 4; i++) {\n          var str = \"listener\".concat(i);\n          this[str] && this[str]();\n        }\n      }\n    }, {\n      key: \"_onResizing\",\n      value: function _onResizing(event) {\n        var _this8 = this;\n        clearTimeout(this.onResize);\n        this.onResize = setTimeout(function () {\n          if (_this8.deviceWidth !== event.target.outerWidth) {\n            _this8._setStyle(_this8.nguItemsContainer.nativeElement, 'transition', \"\");\n            _this8._storeCarouselData();\n          }\n        }, 500);\n      }\n      /** Get Touch input */\n    }, {\n      key: \"_touch\",\n      value: function _touch() {\n        var _this9 = this;\n        if (this.inputs.touch) {\n          import('hammerjs').then(function () {\n            var hammertime = new Hammer(_this9.touchContainer.nativeElement);\n            hammertime.get('pan').set({\n              direction: Hammer.DIRECTION_HORIZONTAL\n            });\n            hammertime.on('panstart', function (ev) {\n              _this9.carouselWidth = _this9.nguItemsContainer.nativeElement.offsetWidth;\n              _this9.touchTransform = _this9.transform[_this9.deviceType];\n              _this9.dexVal = 0;\n              _this9._setStyle(_this9.nguItemsContainer.nativeElement, 'transition', '');\n            });\n            if (_this9.vertical.enabled) {\n              hammertime.on('panup', function (ev) {\n                _this9._touchHandling('panleft', ev);\n              });\n              hammertime.on('pandown', function (ev) {\n                _this9._touchHandling('panright', ev);\n              });\n            } else {\n              hammertime.on('panleft', function (ev) {\n                _this9._touchHandling('panleft', ev);\n              });\n              hammertime.on('panright', function (ev) {\n                _this9._touchHandling('panright', ev);\n              });\n            }\n            hammertime.on('panend pancancel', function (ev) {\n              if (Math.abs(ev.velocity) >= _this9.velocity) {\n                _this9.touch.velocity = ev.velocity;\n                var direc = 0;\n                if (!_this9.RTL) {\n                  direc = _this9.touch.swipe === 'panright' ? 0 : 1;\n                } else {\n                  direc = _this9.touch.swipe === 'panright' ? 1 : 0;\n                }\n                _this9._carouselScrollOne(direc);\n              } else {\n                _this9.dexVal = 0;\n                _this9._setStyle(_this9.nguItemsContainer.nativeElement, 'transition', 'transform 324ms cubic-bezier(0, 0, 0.2, 1)');\n                _this9._setStyle(_this9.nguItemsContainer.nativeElement, 'transform', '');\n              }\n            });\n            hammertime.on('hammer.input', function (ev) {\n              // allow nested touch events to no propagate, this may have other side affects but works for now.\n              // TODO: It is probably better to check the source element of the event and only apply the handle to the correct carousel\n              ev.srcEvent.stopPropagation();\n            });\n          });\n        }\n      }\n      /** handle touch input */\n    }, {\n      key: \"_touchHandling\",\n      value: function _touchHandling(e, ev) {\n        // vertical touch events seem to cause to panstart event with an odd delta\n        // and a center of {x:0,y:0} so this will ignore them\n        if (ev.center.x === 0) {\n          return;\n        }\n        ev = Math.abs(this.vertical.enabled ? ev.deltaY : ev.deltaX);\n        var valt = ev - this.dexVal;\n        valt = this.type === 'responsive' ? Math.abs(ev - this.dexVal) / (this.vertical.enabled ? this.vertical.height : this.carouselWidth) * 100 : valt;\n        this.dexVal = ev;\n        this.touch.swipe = e;\n        this._setTouchTransfrom(e, valt);\n        this._setTransformFromTouch();\n      }\n    }, {\n      key: \"_setTouchTransfrom\",\n      value: function _setTouchTransfrom(e, valt) {\n        var condition = this.RTL ? 'panright' : 'panleft';\n        this.touchTransform = e === condition ? valt + this.touchTransform : this.touchTransform - valt;\n      }\n    }, {\n      key: \"_setTransformFromTouch\",\n      value: function _setTransformFromTouch() {\n        if (this.touchTransform < 0) {\n          this.touchTransform = 0;\n        }\n        var type = this.type === 'responsive' ? '%' : 'px';\n        this._setStyle(this.nguItemsContainer.nativeElement, 'transform', this.vertical.enabled ? \"translate3d(0, \".concat(this.directionSym).concat(this.touchTransform).concat(type, \", 0)\") : \"translate3d(\".concat(this.directionSym).concat(this.touchTransform).concat(type, \", 0, 0)\"));\n      }\n      /** this fn used to disable the interval when it is not on the viewport */\n    }, {\n      key: \"_onWindowScrolling\",\n      value: function _onWindowScrolling() {\n        var top = this.carousel.offsetTop;\n        var scrollY = window.scrollY;\n        var heightt = window.innerHeight;\n        var carouselHeight = this.carousel.offsetHeight;\n        var isCarouselOnScreen = top <= scrollY + heightt - carouselHeight / 4 && top + carouselHeight / 2 >= scrollY;\n        if (isCarouselOnScreen) {\n          this._intervalController$.next(1);\n        } else {\n          this._intervalController$.next(0);\n        }\n      }\n      /** store data based on width of the screen for the carousel */\n    }, {\n      key: \"_storeCarouselData\",\n      value: function _storeCarouselData() {\n        var breakpoints = this.inputs.gridBreakpoints;\n        this.deviceWidth = isPlatformBrowser(this.platformId) ? window.innerWidth : breakpoints.xl;\n        this.carouselWidth = this.carouselMain1.nativeElement.offsetWidth;\n        if (this.type === 'responsive') {\n          this.deviceType = this.deviceWidth >= breakpoints.xl ? 'xl' : this.deviceWidth >= breakpoints.lg ? 'lg' : this.deviceWidth >= breakpoints.md ? 'md' : this.deviceWidth >= breakpoints.sm ? 'sm' : 'xs';\n          this.items = this.inputs.grid[this.deviceType];\n          this.itemWidth = this.carouselWidth / this.items;\n        } else {\n          this.items = Math.trunc(this.carouselWidth / this.inputs.grid.all);\n          this.itemWidth = this.inputs.grid.all;\n          this.deviceType = 'all';\n        }\n        this.slideItems = +(this.inputs.slide < this.items ? this.inputs.slide : this.items);\n        this.load = this.inputs.load >= this.slideItems ? this.inputs.load : this.slideItems;\n        this.speed = this.inputs.speed && this.inputs.speed > -1 ? this.inputs.speed : 400;\n        this._carouselPoint();\n      }\n      /** Used to reset the carousel */\n    }, {\n      key: \"reset\",\n      value: function reset(withOutAnimation) {\n        withOutAnimation && (this.withAnim = false);\n        this.carouselCssNode.textContent = '';\n        this.moveTo(0);\n        this._carouselPoint();\n      }\n      /** Init carousel point */\n    }, {\n      key: \"_carouselPoint\",\n      value: function _carouselPoint() {\n        var Nos = this.dataSource.length - (this.items - this.slideItems);\n        this.pointIndex = Math.ceil(Nos / this.slideItems);\n        var pointers = [];\n        if (this.pointIndex > 1 || !this.inputs.point.hideOnSingleSlide) {\n          for (var i = 0; i < this.pointIndex; i++) {\n            pointers.push(i);\n          }\n        }\n        this.pointNumbers = pointers;\n        this._carouselPointActiver();\n        if (this.pointIndex <= 1) {\n          this._btnBoolean(1, 1);\n        } else {\n          if (this.currentSlide === 0 && !this.loop) {\n            this._btnBoolean(1, 0);\n          } else {\n            this._btnBoolean(0, 0);\n          }\n        }\n      }\n      /** change the active point in carousel */\n    }, {\n      key: \"_carouselPointActiver\",\n      value: function _carouselPointActiver() {\n        var i = Math.ceil(this.currentSlide / this.slideItems);\n        this.activePoint = i;\n        this.cdr.markForCheck();\n      }\n      /** this function is used to scoll the carousel when point is clicked */\n    }, {\n      key: \"moveTo\",\n      value: function moveTo(slide, withOutAnimation) {\n        // slide = slide - 1;\n        withOutAnimation && (this.withAnim = false);\n        if (this.activePoint !== slide && slide < this.pointIndex) {\n          var slideremains;\n          var btns = this.currentSlide < slide ? 1 : 0;\n          switch (slide) {\n            case 0:\n              this._btnBoolean(1, 0);\n              slideremains = slide * this.slideItems;\n              break;\n            case this.pointIndex - 1:\n              this._btnBoolean(0, 1);\n              slideremains = this.dataSource.length - this.items;\n              break;\n            default:\n              this._btnBoolean(0, 0);\n              slideremains = slide * this.slideItems;\n          }\n          this._carouselScrollTwo(btns, slideremains, this.speed);\n        }\n      }\n      /** set the style of the carousel based the inputs data */\n    }, {\n      key: \"_carouselSize\",\n      value: function _carouselSize() {\n        this.token = this._generateID();\n        var dism = '';\n        this.styleid = \".\".concat(this.token, \" > .ngucarousel > .ngu-touch-container > .ngucarousel-items\");\n        if (this.inputs.custom === 'banner') {\n          this._renderer.addClass(this.carousel, 'banner');\n        }\n        if (this.inputs.animation === 'lazy') {\n          dism += \"\".concat(this.styleid, \" > .item {transition: transform .6s ease;}\");\n        }\n        var breakpoints = this.inputs.gridBreakpoints;\n        var itemStyle = '';\n        if (this.vertical.enabled) {\n          var itemWidthXS = \"\".concat(this.styleid, \" > .item {height: \").concat(this.vertical.height / +this.inputs.grid.xs, \"px}\");\n          var itemWidthSM = \"\".concat(this.styleid, \" > .item {height: \").concat(this.vertical.height / +this.inputs.grid.sm, \"px}\");\n          var itemWidthMD = \"\".concat(this.styleid, \" > .item {height: \").concat(this.vertical.height / +this.inputs.grid.md, \"px}\");\n          var itemWidthLG = \"\".concat(this.styleid, \" > .item {height: \").concat(this.vertical.height / +this.inputs.grid.lg, \"px}\");\n          var itemWidthXL = \"\".concat(this.styleid, \" > .item {height: \").concat(this.vertical.height / +this.inputs.grid.xl, \"px}\");\n          itemStyle = \"@media (max-width:\".concat(breakpoints.sm - 1, \"px){\").concat(itemWidthXS, \"}\\n                    @media (max-width:\").concat(breakpoints.sm, \"px){\").concat(itemWidthSM, \"}\\n                    @media (min-width:\").concat(breakpoints.md, \"px){\").concat(itemWidthMD, \"}\\n                    @media (min-width:\").concat(breakpoints.lg, \"px){\").concat(itemWidthLG, \"}\\n                    @media (min-width:\").concat(breakpoints.xl, \"px){\").concat(itemWidthXL, \"}\");\n        } else if (this.type === 'responsive') {\n          var _itemWidthXS = this.inputs.type === 'mobile' ? \"\".concat(this.styleid, \" .item {flex: 0 0 \").concat(95 / +this.inputs.grid.xs, \"%; width: \").concat(95 / +this.inputs.grid.xs, \"%;}\") : \"\".concat(this.styleid, \" .item {flex: 0 0 \").concat(100 / +this.inputs.grid.xs, \"%; width: \").concat(100 / +this.inputs.grid.xs, \"%;}\");\n          var _itemWidthSM = \"\".concat(this.styleid, \" > .item {flex: 0 0 \").concat(100 / +this.inputs.grid.sm, \"%; width: \").concat(100 / +this.inputs.grid.sm, \"%}\");\n          var _itemWidthMD = \"\".concat(this.styleid, \" > .item {flex: 0 0 \").concat(100 / +this.inputs.grid.md, \"%; width: \").concat(100 / +this.inputs.grid.md, \"%}\");\n          var _itemWidthLG = \"\".concat(this.styleid, \" > .item {flex: 0 0 \").concat(100 / +this.inputs.grid.lg, \"%; width: \").concat(100 / +this.inputs.grid.lg, \"%}\");\n          var _itemWidthXL = \"\".concat(this.styleid, \" > .item {flex: 0 0 \").concat(100 / +this.inputs.grid.xl, \"%; width: \").concat(100 / +this.inputs.grid.xl, \"%}\");\n          itemStyle = \"@media (max-width:\".concat(breakpoints.sm - 1, \"px){\").concat(_itemWidthXS, \"}\\n                    @media (min-width:\").concat(breakpoints.sm, \"px){\").concat(_itemWidthSM, \"}\\n                    @media (min-width:\").concat(breakpoints.md, \"px){\").concat(_itemWidthMD, \"}\\n                    @media (min-width:\").concat(breakpoints.lg, \"px){\").concat(_itemWidthLG, \"}\\n                    @media (min-width:\").concat(breakpoints.xl, \"px){\").concat(_itemWidthXL, \"}\");\n        } else {\n          itemStyle = \"\".concat(this.styleid, \" .item {flex: 0 0 \").concat(this.inputs.grid.all, \"px; width: \").concat(this.inputs.grid.all, \"px;}\");\n        }\n        this._renderer.addClass(this.carousel, this.token);\n        if (this.vertical.enabled) {\n          this._renderer.addClass(this.nguItemsContainer.nativeElement, 'nguvertical');\n          this._renderer.setStyle(this.carouselMain1.nativeElement, 'height', \"\".concat(this.vertical.height, \"px\"));\n        }\n        // tslint:disable-next-line:no-unused-expression\n        this.RTL && !this.vertical.enabled && this._renderer.addClass(this.carousel, 'ngurtl');\n        this._createStyleElem(\"\".concat(dism, \" \").concat(itemStyle));\n        this._storeCarouselData();\n      }\n      /** logic to scroll the carousel step 1 */\n    }, {\n      key: \"_carouselScrollOne\",\n      value: function _carouselScrollOne(Btn) {\n        var itemSpeed = this.speed;\n        var translateXval = 0;\n        var currentSlide = 0;\n        var touchMove = Math.ceil(this.dexVal / this.itemWidth);\n        touchMove = isFinite(touchMove) ? touchMove : 0;\n        this._setStyle(this.nguItemsContainer.nativeElement, 'transform', '');\n        if (this.pointIndex === 1) {\n          return;\n        } else if (Btn === 0 && (!this.loop && !this.isFirst || this.loop)) {\n          var currentSlideD = this.currentSlide - this.slideItems;\n          var MoveSlide = currentSlideD + this.slideItems;\n          this._btnBoolean(0, 1);\n          if (this.currentSlide === 0) {\n            currentSlide = this.dataSource.length - this.items;\n            itemSpeed = 400;\n            this._btnBoolean(0, 1);\n          } else if (this.slideItems >= MoveSlide) {\n            currentSlide = translateXval = 0;\n            this._btnBoolean(1, 0);\n          } else {\n            this._btnBoolean(0, 0);\n            if (touchMove > this.slideItems) {\n              currentSlide = this.currentSlide - touchMove;\n              itemSpeed = 200;\n            } else {\n              currentSlide = this.currentSlide - this.slideItems;\n            }\n          }\n          this._carouselScrollTwo(Btn, currentSlide, itemSpeed);\n        } else if (Btn === 1 && (!this.loop && !this.isLast || this.loop)) {\n          if (this.dataSource.length <= this.currentSlide + this.items + this.slideItems && !this.isLast) {\n            currentSlide = this.dataSource.length - this.items;\n            this._btnBoolean(0, 1);\n          } else if (this.isLast) {\n            currentSlide = translateXval = 0;\n            itemSpeed = 400;\n            this._btnBoolean(1, 0);\n          } else {\n            this._btnBoolean(0, 0);\n            if (touchMove > this.slideItems) {\n              currentSlide = this.currentSlide + this.slideItems + (touchMove - this.slideItems);\n              itemSpeed = 200;\n            } else {\n              currentSlide = this.currentSlide + this.slideItems;\n            }\n          }\n          this._carouselScrollTwo(Btn, currentSlide, itemSpeed);\n        }\n      }\n      /** logic to scroll the carousel step 2 */\n    }, {\n      key: \"_carouselScrollTwo\",\n      value: function _carouselScrollTwo(Btn, currentSlide, itemSpeed) {\n        // tslint:disable-next-line:no-unused-expression\n        if (this.dexVal !== 0) {\n          var val = Math.abs(this.touch.velocity);\n          var somt = Math.floor(this.dexVal / val / this.dexVal * (this.deviceWidth - this.dexVal));\n          somt = somt > itemSpeed ? itemSpeed : somt;\n          itemSpeed = somt < 200 ? 200 : somt;\n          this.dexVal = 0;\n        }\n        if (this.withAnim) {\n          this._setStyle(this.nguItemsContainer.nativeElement, 'transition', \"transform \".concat(itemSpeed, \"ms \").concat(this.inputs.easing));\n          this.inputs.animation && this._carouselAnimator(Btn, currentSlide + 1, currentSlide + this.items, itemSpeed, Math.abs(this.currentSlide - currentSlide));\n        } else {\n          this._setStyle(this.nguItemsContainer.nativeElement, 'transition', \"\");\n        }\n        this.itemLength = this.dataSource.length;\n        this._transformStyle(currentSlide);\n        this.currentSlide = currentSlide;\n        this.onMove.emit(this);\n        this._carouselPointActiver();\n        this._carouselLoadTrigger();\n        this.withAnim = true;\n      }\n      /** boolean function for making isFirst and isLast */\n    }, {\n      key: \"_btnBoolean\",\n      value: function _btnBoolean(first, last) {\n        this.isFirst = !!first;\n        this.isLast = !!last;\n      }\n    }, {\n      key: \"_transformString\",\n      value: function _transformString(grid, slide) {\n        var collect = '';\n        collect += \"\".concat(this.styleid, \" { transform: translate3d(\");\n        if (this.vertical.enabled) {\n          this.transform[grid] = this.vertical.height / this.inputs.grid[grid] * slide;\n          collect += \"0, -\".concat(this.transform[grid], \"px, 0\");\n        } else {\n          this.transform[grid] = 100 / this.inputs.grid[grid] * slide;\n          collect += \"\".concat(this.directionSym).concat(this.transform[grid], \"%, 0, 0\");\n        }\n        collect += \"); }\";\n        return collect;\n      }\n      /** set the transform style to scroll the carousel  */\n    }, {\n      key: \"_transformStyle\",\n      value: function _transformStyle(slide) {\n        var slideCss = '';\n        if (this.type === 'responsive') {\n          var breakpoints = this.inputs.gridBreakpoints;\n          slideCss = \"@media (max-width: \".concat(breakpoints.sm - 1, \"px) {\").concat(this._transformString('xs', slide), \"}\\n      @media (min-width: \").concat(breakpoints.sm, \"px) {\").concat(this._transformString('sm', slide), \" }\\n      @media (min-width: \").concat(breakpoints.md, \"px) {\").concat(this._transformString('md', slide), \" }\\n      @media (min-width: \").concat(breakpoints.lg, \"px) {\").concat(this._transformString('lg', slide), \" }\\n      @media (min-width: \").concat(breakpoints.xl, \"px) {\").concat(this._transformString('xl', slide), \" }\");\n        } else {\n          this.transform.all = this.inputs.grid.all * slide;\n          slideCss = \"\".concat(this.styleid, \" { transform: translate3d(\").concat(this.directionSym).concat(this.transform.all, \"px, 0, 0);\");\n        }\n        this.carouselCssNode.textContent = slideCss;\n      }\n      /** this will trigger the carousel to load the items */\n    }, {\n      key: \"_carouselLoadTrigger\",\n      value: function _carouselLoadTrigger() {\n        if (typeof this.inputs.load === 'number') {\n          this.dataSource.length - this.load <= this.currentSlide + this.items && this.carouselLoad.emit(this.currentSlide);\n        }\n      }\n      /** generate Class for each carousel to set specific style */\n    }, {\n      key: \"_generateID\",\n      value: function _generateID() {\n        var text = '';\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (var i = 0; i < 6; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return \"ngucarousel\".concat(text);\n      }\n      /** handle the auto slide */\n    }, {\n      key: \"_carouselInterval\",\n      value: function _carouselInterval() {\n        var _this10 = this;\n        var container = this.carouselMain1.nativeElement;\n        if (this.interval && this.loop) {\n          this.listener4 = this._renderer.listen('window', 'scroll', function () {\n            clearTimeout(_this10.onScrolling);\n            _this10.onScrolling = setTimeout(function () {\n              _this10._onWindowScrolling();\n            }, 600);\n          });\n          var play$ = fromEvent(container, 'mouseleave').pipe(mapTo(1));\n          var pause$ = fromEvent(container, 'mouseenter').pipe(mapTo(0));\n          var touchPlay$ = fromEvent(container, 'touchstart').pipe(mapTo(1));\n          var touchPause$ = fromEvent(container, 'touchend').pipe(mapTo(0));\n          var interval$ = interval(this.inputs.interval.timing).pipe(mapTo(1));\n          setTimeout(function () {\n            _this10.carouselInt = merge(play$, touchPlay$, pause$, touchPause$, _this10._intervalController$).pipe(startWith(1), switchMap(function (val) {\n              _this10.isHovered = !val;\n              _this10.cdr.markForCheck();\n              return val ? interval$ : EMPTY;\n            })).subscribe(function (res) {\n              _this10._carouselScrollOne(1);\n            });\n          }, this.interval.initialDelay);\n        }\n      }\n    }, {\n      key: \"_updateItemIndexContextAni\",\n      value: function _updateItemIndexContextAni() {\n        var viewContainer = this._nodeOutlet.viewContainer;\n        for (var renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n          var viewRef = viewContainer.get(renderIndex);\n          var context = viewRef.context;\n          context.count = count;\n          context.first = renderIndex === 0;\n          context.last = renderIndex === count - 1;\n          context.even = renderIndex % 2 === 0;\n          context.odd = !context.even;\n          context.index = renderIndex;\n        }\n      }\n      /** animate the carousel items */\n    }, {\n      key: \"_carouselAnimator\",\n      value: function _carouselAnimator(direction, start, end, speed, length) {\n        var _this11 = this;\n        var viewContainer = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : this._nodeOutlet.viewContainer;\n        var val = length < 5 ? length : 5;\n        val = val === 1 ? 3 : val;\n        var collectIndex = [];\n        if (direction === 1) {\n          for (var i = start - 1; i < end; i++) {\n            collectIndex.push(i);\n            val = val * 2;\n            var viewRef = viewContainer.get(i);\n            var context = viewRef.context;\n            context.animate = {\n              value: true,\n              params: {\n                distance: val\n              }\n            };\n          }\n        } else {\n          for (var _i2 = end - 1; _i2 >= start - 1; _i2--) {\n            collectIndex.push(_i2);\n            val = val * 2;\n            var _viewRef = viewContainer.get(_i2);\n            var _context = _viewRef.context;\n            _context.animate = {\n              value: true,\n              params: {\n                distance: -val\n              }\n            };\n          }\n        }\n        this.cdr.markForCheck();\n        setTimeout(function () {\n          _this11._removeAnimations(collectIndex);\n        }, speed * 0.7);\n      }\n    }, {\n      key: \"_removeAnimations\",\n      value: function _removeAnimations(indexs) {\n        var viewContainer = this._nodeOutlet.viewContainer;\n        indexs.forEach(function (i) {\n          var viewRef = viewContainer.get(i);\n          var context = viewRef.context;\n          context.animate = {\n            value: false,\n            params: {\n              distance: 0\n            }\n          };\n        });\n        this.cdr.markForCheck();\n      }\n      /** Short form for setElementStyle */\n    }, {\n      key: \"_setStyle\",\n      value: function _setStyle(el, prop, val) {\n        this._renderer.setStyle(el, prop, val);\n      }\n      /** For generating style tag */\n    }, {\n      key: \"_createStyleElem\",\n      value: function _createStyleElem(datas) {\n        var styleItem = this._renderer.createElement('style');\n        if (datas) {\n          var styleText = this._renderer.createText(datas);\n          this._renderer.appendChild(styleItem, styleText);\n        }\n        this._renderer.appendChild(this.carousel, styleItem);\n        return styleItem;\n      }\n    }]);\n  }(NguCarouselStore);\n  NguCarousel.ɵfac = function NguCarousel_Factory(t) {\n    return new (t || NguCarousel)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  NguCarousel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NguCarousel,\n    selectors: [[\"ngu-carousel\"]],\n    contentQueries: function NguCarousel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NguCarouselNextDirective, 5, ElementRef);\n        i0.ɵɵcontentQuery(dirIndex, NguCarouselPrevDirective, 5, ElementRef);\n        i0.ɵɵcontentQuery(dirIndex, NguCarouselDefDirective, 4);\n      }\n      if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nextBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.prevBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._defDirec = _t);\n      }\n    },\n    viewQuery: function NguCarousel_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NguCarouselOutlet, 7);\n        i0.ɵɵviewQuery(_c0, 7, ElementRef);\n        i0.ɵɵviewQuery(_c1, 7, ElementRef);\n        i0.ɵɵviewQuery(_c2, 7, ElementRef);\n      }\n      if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselMain1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nguItemsContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.touchContainer = _t.first);\n      }\n    },\n    inputs: {\n      inputs: \"inputs\",\n      dataSource: \"dataSource\",\n      trackBy: \"trackBy\"\n    },\n    outputs: {\n      carouselLoad: \"carouselLoad\",\n      onMove: \"onMove\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 11,\n    vars: 0,\n    consts: [[1, \"ngucarousel\"], [\"ngucarousel\", \"\"], [1, \"ngu-touch-container\"], [\"touchContainer\", \"\"], [1, \"ngucarousel-items\"], [\"nguItemsContainer\", \"\"], [\"nguCarouselOutlet\", \"\"], [1, \"nguclearFix\"]],\n    template: function NguCarousel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementStart(3, \"div\", 2, 3)(5, \"div\", 4, 5);\n        i0.ɵɵelementContainer(7, 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵprojection(9, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(10, 2);\n      }\n    },\n    dependencies: [NguCarouselOutlet],\n    styles: [\"[_nghost-%COMP%]{display:block;position:relative}.ngurtl[_nghost-%COMP%]{direction:rtl}.ngucarousel[_ngcontent-%COMP%]{position:relative;overflow:hidden;height:100%}.ngucarousel[_ngcontent-%COMP%]   .ngucarousel-items[_ngcontent-%COMP%]{position:relative;display:flex;height:100%}.nguvertical[_ngcontent-%COMP%]{flex-direction:column}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]{position:absolute;width:100%;bottom:20px}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{background:rgba(255,255,255,.55)}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%]{background:white}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{cursor:pointer}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]{list-style-type:none;text-align:center;padding:12px;margin:0;white-space:nowrap;overflow:auto;box-sizing:border-box}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline-block;border-radius:50%;background:rgba(0,0,0,.55);padding:4px;margin:0 4px;transition-timing-function:cubic-bezier(.17,.67,.83,.67);transition:.4s}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%]{background:#6b6b6b;transform:scale(1.8)}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{cursor:pointer}.nguclearFix[_ngcontent-%COMP%]{clear:both}\"],\n    changeDetection: 0\n  });\n  return NguCarousel;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguItemComponent = /*#__PURE__*/(function () {\n  var NguItemComponent = /*#__PURE__*/_createClass(function NguItemComponent() {\n    _classCallCheck(this, NguItemComponent);\n    this.classes = true;\n  });\n  NguItemComponent.ɵfac = function NguItemComponent_Factory(t) {\n    return new (t || NguItemComponent)();\n  };\n  NguItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NguItemComponent,\n    selectors: [[\"ngu-item\"]],\n    hostVars: 2,\n    hostBindings: function NguItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"item\", ctx.classes);\n      }\n    },\n    ngContentSelectors: _c5,\n    decls: 1,\n    vars: 0,\n    template: function NguItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    }\n  });\n  return NguItemComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguTileComponent = /*#__PURE__*/(function () {\n  var NguTileComponent = /*#__PURE__*/_createClass(function NguTileComponent() {\n    _classCallCheck(this, NguTileComponent);\n    this.classes = true;\n  });\n  NguTileComponent.ɵfac = function NguTileComponent_Factory(t) {\n    return new (t || NguTileComponent)();\n  };\n  NguTileComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NguTileComponent,\n    selectors: [[\"ngu-tile\"]],\n    hostVars: 2,\n    hostBindings: function NguTileComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"item\", ctx.classes);\n      }\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"tile\"]],\n    template: function NguTileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{padding:10px;box-sizing:border-box}.tile[_ngcontent-%COMP%]{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f}\"]\n  });\n  return NguTileComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NguCarouselModule = /*#__PURE__*/(function () {\n  var NguCarouselModule = /*#__PURE__*/_createClass(function NguCarouselModule() {\n    _classCallCheck(this, NguCarouselModule);\n  });\n  NguCarouselModule.ɵfac = function NguCarouselModule_Factory(t) {\n    return new (t || NguCarouselModule)();\n  };\n  NguCarouselModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NguCarouselModule\n  });\n  NguCarouselModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return NguCarouselModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of carousel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NguCarousel, NguCarouselConfig, NguCarouselDefDirective, NguCarouselItemDirective, NguCarouselModule, NguCarouselNextDirective, NguCarouselOutlet, NguCarouselPointDirective, NguCarouselPrevDirective, NguCarouselStore, NguItemComponent, NguTileComponent };\n//# sourceMappingURL=ngu-carousel.mjs.map","map":null,"metadata":{},"sourceType":"module"}