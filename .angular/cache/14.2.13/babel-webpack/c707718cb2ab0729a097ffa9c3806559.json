{"ast":null,"code":"import _toConsumableArray from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/sevyondatracks/Downloads/dexamhtml-300/dexamhtml-300/dexam-angular-landing-page/dexam-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ViewEncapsulation, Injectable, Inject, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE, NgModule } from '@angular/core';\nexport { ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2, BrowserModule } from '@angular/platform-browser';\nimport { AnimationBuilder, sequence, AnimationFactory } from '@angular/animations';\nimport * as i1 from '@angular/animations/browser';\nimport { ɵAnimationEngine, ɵWebAnimationsStyleNormalizer, ɵAnimationStyleNormalizer, AnimationDriver, ɵWebAnimationsDriver, ɵNoopAnimationDriver } from '@angular/animations/browser';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserAnimationBuilder = /*#__PURE__*/(function () {\n  var BrowserAnimationBuilder = /*#__PURE__*/function (_AnimationBuilder) {\n    function BrowserAnimationBuilder(rootRenderer, doc) {\n      var _this;\n      _classCallCheck(this, BrowserAnimationBuilder);\n      _this = _callSuper(this, BrowserAnimationBuilder);\n      _this._nextAnimationId = 0;\n      var typeData = {\n        id: '0',\n        encapsulation: ViewEncapsulation.None,\n        styles: [],\n        data: {\n          animation: []\n        }\n      };\n      _this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n      return _this;\n    }\n    _inherits(BrowserAnimationBuilder, _AnimationBuilder);\n    return _createClass(BrowserAnimationBuilder, [{\n      key: \"build\",\n      value: function build(animation) {\n        var id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        var entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n      }\n    }]);\n  }(AnimationBuilder);\n  BrowserAnimationBuilder.ɵfac = function BrowserAnimationBuilder_Factory(t) {\n    return new (t || BrowserAnimationBuilder)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(DOCUMENT));\n  };\n  BrowserAnimationBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserAnimationBuilder,\n    factory: BrowserAnimationBuilder.ɵfac\n  });\n  return BrowserAnimationBuilder;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar BrowserAnimationFactory = /*#__PURE__*/function (_AnimationFactory) {\n  function BrowserAnimationFactory(_id, _renderer) {\n    var _this2;\n    _classCallCheck(this, BrowserAnimationFactory);\n    _this2 = _callSuper(this, BrowserAnimationFactory);\n    _this2._id = _id;\n    _this2._renderer = _renderer;\n    return _this2;\n  }\n  _inherits(BrowserAnimationFactory, _AnimationFactory);\n  return _createClass(BrowserAnimationFactory, [{\n    key: \"create\",\n    value: function create(element, options) {\n      return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    }\n  }]);\n}(AnimationFactory);\nvar RendererAnimationPlayer = /*#__PURE__*/function () {\n  function RendererAnimationPlayer(id, element, options, _renderer) {\n    _classCallCheck(this, RendererAnimationPlayer);\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this.parentPlayer = null;\n    this._started = false;\n    this.totalTime = 0;\n    this._command('create', options);\n  }\n  return _createClass(RendererAnimationPlayer, [{\n    key: \"_listen\",\n    value: function _listen(eventName, callback) {\n      return this._renderer.listen(this.element, \"@@\".concat(this.id, \":\").concat(eventName), callback);\n    }\n  }, {\n    key: \"_command\",\n    value: function _command(command) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    }\n  }, {\n    key: \"onDone\",\n    value: function onDone(fn) {\n      this._listen('done', fn);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(fn) {\n      this._listen('start', fn);\n    }\n  }, {\n    key: \"onDestroy\",\n    value: function onDestroy(fn) {\n      this._listen('destroy', fn);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this._command('init');\n    }\n  }, {\n    key: \"hasStarted\",\n    value: function hasStarted() {\n      return this._started;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this._command('play');\n      this._started = true;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._command('pause');\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this._command('restart');\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this._command('finish');\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._command('destroy');\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._command('reset');\n      this._started = false;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(p) {\n      this._command('setPosition', p);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      var _a, _b;\n      return (_b = (_a = this._renderer.engine.players[+this.id]) === null || _a === void 0 ? void 0 : _a.getPosition()) !== null && _b !== void 0 ? _b : 0;\n    }\n  }]);\n}();\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  return renderer.setProperty(element, \"@@\".concat(id, \":\").concat(command), args);\n}\nvar ANIMATION_PREFIX = '@';\nvar DISABLE_ANIMATIONS_FLAG = '@.disabled';\nvar AnimationRendererFactory = /*#__PURE__*/(function () {\n  var AnimationRendererFactory = /*#__PURE__*/function () {\n    function AnimationRendererFactory(delegate, engine, _zone) {\n      _classCallCheck(this, AnimationRendererFactory);\n      this.delegate = delegate;\n      this.engine = engine;\n      this._zone = _zone;\n      this._currentId = 0;\n      this._microtaskId = 1;\n      this._animationCallbacksBuffer = [];\n      this._rendererCache = new Map();\n      this._cdRecurDepth = 0;\n      this.promise = Promise.resolve(0);\n      engine.onRemovalComplete = function (element, delegate) {\n        // Note: if a component element has a leave animation, and a host leave animation,\n        // the view engine will call `removeChild` for the parent\n        // component renderer as well as for the child component renderer.\n        // Therefore, we need to check if we already removed the element.\n        var parentNode = delegate === null || delegate === void 0 ? void 0 : delegate.parentNode(element);\n        if (parentNode) {\n          delegate.removeChild(parentNode, element);\n        }\n      };\n    }\n    return _createClass(AnimationRendererFactory, [{\n      key: \"createRenderer\",\n      value: function createRenderer(hostElement, type) {\n        var _this3 = this;\n        var EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        var delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n          var renderer = this._rendererCache.get(delegate);\n          if (!renderer) {\n            // Ensure that the renderer is removed from the cache on destroy\n            // since it may contain references to detached DOM nodes.\n            var onRendererDestroy = function onRendererDestroy() {\n              return _this3._rendererCache.delete(delegate);\n            };\n            renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine, onRendererDestroy);\n            // only cache this result when the base renderer is used\n            this._rendererCache.set(delegate, renderer);\n          }\n          return renderer;\n        }\n        var componentId = type.id;\n        var namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        var registerTrigger = function registerTrigger(trigger) {\n          if (Array.isArray(trigger)) {\n            trigger.forEach(registerTrigger);\n          } else {\n            _this3.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n          }\n        };\n        var animationTriggers = type.data['animation'];\n        animationTriggers.forEach(registerTrigger);\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n      }\n    }, {\n      key: \"begin\",\n      value: function begin() {\n        this._cdRecurDepth++;\n        if (this.delegate.begin) {\n          this.delegate.begin();\n        }\n      }\n    }, {\n      key: \"_scheduleCountTask\",\n      value: function _scheduleCountTask() {\n        var _this4 = this;\n        // always use promise to schedule microtask instead of use Zone\n        this.promise.then(function () {\n          _this4._microtaskId++;\n        });\n      }\n      /** @internal */\n    }, {\n      key: \"scheduleListenerCallback\",\n      value: function scheduleListenerCallback(count, fn, data) {\n        var _this5 = this;\n        if (count >= 0 && count < this._microtaskId) {\n          this._zone.run(function () {\n            return fn(data);\n          });\n          return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n          Promise.resolve(null).then(function () {\n            _this5._zone.run(function () {\n              _this5._animationCallbacksBuffer.forEach(function (tuple) {\n                var _tuple = _slicedToArray(tuple, 2),\n                  fn = _tuple[0],\n                  data = _tuple[1];\n                fn(data);\n              });\n              _this5._animationCallbacksBuffer = [];\n            });\n          });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n      }\n    }, {\n      key: \"end\",\n      value: function end() {\n        var _this6 = this;\n        this._cdRecurDepth--;\n        // this is to prevent animations from running twice when an inner\n        // component does CD when a parent component instead has inserted it\n        if (this._cdRecurDepth == 0) {\n          this._zone.runOutsideAngular(function () {\n            _this6._scheduleCountTask();\n            _this6.engine.flush(_this6._microtaskId);\n          });\n        }\n        if (this.delegate.end) {\n          this.delegate.end();\n        }\n      }\n    }, {\n      key: \"whenRenderingDone\",\n      value: function whenRenderingDone() {\n        return this.engine.whenRenderingDone();\n      }\n    }]);\n  }();\n  AnimationRendererFactory.ɵfac = function AnimationRendererFactory_Factory(t) {\n    return new (t || AnimationRendererFactory)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i1.ɵAnimationEngine), i0.ɵɵinject(i0.NgZone));\n  };\n  AnimationRendererFactory.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AnimationRendererFactory,\n    factory: AnimationRendererFactory.ɵfac\n  });\n  return AnimationRendererFactory;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar BaseAnimationRenderer = /*#__PURE__*/function () {\n  function BaseAnimationRenderer(namespaceId, delegate, engine, _onDestroy) {\n    _classCallCheck(this, BaseAnimationRenderer);\n    this.namespaceId = namespaceId;\n    this.delegate = delegate;\n    this.engine = engine;\n    this._onDestroy = _onDestroy;\n    this.destroyNode = this.delegate.destroyNode ? function (n) {\n      return delegate.destroyNode(n);\n    } : null;\n  }\n  return _createClass(BaseAnimationRenderer, [{\n    key: \"data\",\n    get: function get() {\n      return this.delegate.data;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n      this.engine.destroy(this.namespaceId, this.delegate);\n      this.delegate.destroy();\n      (_a = this._onDestroy) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      return this.delegate.createElement(name, namespace);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return this.delegate.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return this.delegate.createText(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      this.delegate.appendChild(parent, newChild);\n      this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      var isMove = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      this.delegate.insertBefore(parent, newChild, refChild);\n      // If `isMove` true than we should animate this insert.\n      this.engine.onInsert(this.namespaceId, newChild, parent, isMove);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild, isHostElement) {\n      this.engine.onRemove(this.namespaceId, oldChild, this.delegate, isHostElement);\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.delegate.parentNode(node);\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return this.delegate.nextSibling(node);\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      this.delegate.setAttribute(el, name, value, namespace);\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      this.delegate.removeAttribute(el, name, namespace);\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      this.delegate.addClass(el, name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      this.delegate.removeClass(el, name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      this.delegate.setStyle(el, style, value, flags);\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      this.delegate.removeStyle(el, style, flags);\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n        this.disableAnimations(el, !!value);\n      } else {\n        this.delegate.setProperty(el, name, value);\n      }\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      this.delegate.setValue(node, value);\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, eventName, callback) {\n      return this.delegate.listen(target, eventName, callback);\n    }\n  }, {\n    key: \"disableAnimations\",\n    value: function disableAnimations(element, value) {\n      this.engine.disableAnimations(element, value);\n    }\n  }]);\n}();\nvar AnimationRenderer = /*#__PURE__*/function (_BaseAnimationRendere) {\n  function AnimationRenderer(factory, namespaceId, delegate, engine, onDestroy) {\n    var _this7;\n    _classCallCheck(this, AnimationRenderer);\n    _this7 = _callSuper(this, AnimationRenderer, [namespaceId, delegate, engine, onDestroy]);\n    _this7.factory = factory;\n    _this7.namespaceId = namespaceId;\n    return _this7;\n  }\n  _inherits(AnimationRenderer, _BaseAnimationRendere);\n  return _createClass(AnimationRenderer, [{\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      if (name.charAt(0) == ANIMATION_PREFIX) {\n        if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n          value = value === undefined ? true : !!value;\n          this.disableAnimations(el, value);\n        } else {\n          this.engine.process(this.namespaceId, el, name.slice(1), value);\n        }\n      } else {\n        this.delegate.setProperty(el, name, value);\n      }\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, eventName, callback) {\n      var _this8 = this;\n      if (eventName.charAt(0) == ANIMATION_PREFIX) {\n        var element = resolveElementFromTarget(target);\n        var name = eventName.slice(1);\n        var phase = '';\n        // @listener.phase is for trigger animation callbacks\n        // @@listener is for animation builder callbacks\n        if (name.charAt(0) != ANIMATION_PREFIX) {\n          var _parseTriggerCallback = parseTriggerCallbackName(name);\n          var _parseTriggerCallback2 = _slicedToArray(_parseTriggerCallback, 2);\n          name = _parseTriggerCallback2[0];\n          phase = _parseTriggerCallback2[1];\n        }\n        return this.engine.listen(this.namespaceId, element, name, phase, function (event) {\n          var countId = event['_data'] || -1;\n          _this8.factory.scheduleListenerCallback(countId, callback, event);\n        });\n      }\n      return this.delegate.listen(target, eventName, callback);\n    }\n  }]);\n}(BaseAnimationRenderer);\nfunction resolveElementFromTarget(target) {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\nfunction parseTriggerCallbackName(triggerName) {\n  var dotIndex = triggerName.indexOf('.');\n  var trigger = triggerName.substring(0, dotIndex);\n  var phase = triggerName.slice(dotIndex + 1);\n  return [trigger, phase];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InjectableAnimationEngine = /*#__PURE__*/(function () {\n  var InjectableAnimationEngine = /*#__PURE__*/function (_ɵAnimationEngine) {\n    // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n    // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n    // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n    function InjectableAnimationEngine(doc, driver, normalizer, appRef) {\n      _classCallCheck(this, InjectableAnimationEngine);\n      return _callSuper(this, InjectableAnimationEngine, [doc.body, driver, normalizer]);\n    }\n    _inherits(InjectableAnimationEngine, _ɵAnimationEngine);\n    return _createClass(InjectableAnimationEngine, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.flush();\n      }\n    }]);\n  }(ɵAnimationEngine);\n  InjectableAnimationEngine.ɵfac = function InjectableAnimationEngine_Factory(t) {\n    return new (t || InjectableAnimationEngine)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.AnimationDriver), i0.ɵɵinject(i1.ɵAnimationStyleNormalizer), i0.ɵɵinject(i0.ApplicationRef));\n  };\n  InjectableAnimationEngine.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: InjectableAnimationEngine,\n    factory: InjectableAnimationEngine.ɵfac\n  });\n  return InjectableAnimationEngine;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction instantiateDefaultStyleNormalizer() {\n  return new ɵWebAnimationsStyleNormalizer();\n}\nfunction instantiateRendererFactory(renderer, engine, zone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\nvar SHARED_ANIMATION_PROVIDERS = [{\n  provide: AnimationBuilder,\n  useClass: BrowserAnimationBuilder\n}, {\n  provide: ɵAnimationStyleNormalizer,\n  useFactory: instantiateDefaultStyleNormalizer\n}, {\n  provide: ɵAnimationEngine,\n  useClass: InjectableAnimationEngine\n}, {\n  provide: RendererFactory2,\n  useFactory: instantiateRendererFactory,\n  deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n}];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nvar BROWSER_ANIMATIONS_PROVIDERS = /*#__PURE__*/[{\n  provide: AnimationDriver,\n  useFactory: function useFactory() {\n    return new ɵWebAnimationsDriver();\n  }\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'BrowserAnimations'\n}].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = /*#__PURE__*/[{\n  provide: AnimationDriver,\n  useClass: ɵNoopAnimationDriver\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'NoopAnimations'\n}].concat(SHARED_ANIMATION_PROVIDERS);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nvar BrowserAnimationsModule = /*#__PURE__*/(function () {\n  var BrowserAnimationsModule = /*#__PURE__*/function () {\n    function BrowserAnimationsModule() {\n      _classCallCheck(this, BrowserAnimationsModule);\n    }\n    return _createClass(BrowserAnimationsModule, null, [{\n      key: \"withConfig\",\n      value:\n      /**\n       * Configures the module based on the specified object.\n       *\n       * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n       * @see `BrowserAnimationsModuleConfig`\n       *\n       * @usageNotes\n       * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n       * function as follows:\n       * ```\n       * @NgModule({\n       *   imports: [BrowserAnimationsModule.withConfig(config)]\n       * })\n       * class MyNgModule {}\n       * ```\n       */\n      function withConfig(config) {\n        return {\n          ngModule: BrowserAnimationsModule,\n          providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS : BROWSER_ANIMATIONS_PROVIDERS\n        };\n      }\n    }]);\n  }();\n  BrowserAnimationsModule.ɵfac = function BrowserAnimationsModule_Factory(t) {\n    return new (t || BrowserAnimationsModule)();\n  };\n  BrowserAnimationsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrowserAnimationsModule\n  });\n  BrowserAnimationsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: BROWSER_ANIMATIONS_PROVIDERS,\n    imports: [BrowserModule]\n  });\n  return BrowserAnimationsModule;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideAnimations() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideAnimations` call results in app code.\n  return _toConsumableArray(BROWSER_ANIMATIONS_PROVIDERS);\n}\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nvar NoopAnimationsModule = /*#__PURE__*/(function () {\n  var NoopAnimationsModule = /*#__PURE__*/_createClass(function NoopAnimationsModule() {\n    _classCallCheck(this, NoopAnimationsModule);\n  });\n  NoopAnimationsModule.ɵfac = function NoopAnimationsModule_Factory(t) {\n    return new (t || NoopAnimationsModule)();\n  };\n  NoopAnimationsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NoopAnimationsModule\n  });\n  NoopAnimationsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n    imports: [BrowserModule]\n  });\n  return NoopAnimationsModule;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to disable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to bootstrap an application using\n * the `bootstrapApplication` function, but you need to disable animations\n * (for example, when running tests).\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideNoopAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideNoopAnimations() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideNoopAnimations` call results in app code.\n  return _toConsumableArray(BROWSER_NOOP_ANIMATIONS_PROVIDERS);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserAnimationsModule, NoopAnimationsModule, provideAnimations, provideNoopAnimations, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, InjectableAnimationEngine as ɵInjectableAnimationEngine };\n//# sourceMappingURL=animations.mjs.map","map":null,"metadata":{},"sourceType":"module"}