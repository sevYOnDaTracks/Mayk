{"ast":null,"code":"import { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\nimport { from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/storage\";\nexport let AdmissionService = /*#__PURE__*/(() => {\n  class AdmissionService {\n    constructor(firestore, storage) {\n      this.firestore = firestore;\n      this.storage = storage;\n    }\n    submitAdmission(admission) {\n      const admissionRef = this.firestore.collection('admissions').doc(admission.uid);\n      const uploadTasks = [];\n      // Upload baccalaureat file if exists\n      if (admission.baccalaureat) {\n        const path = `${admission.uid}/baccalaureat/${admission.baccalaureat.name}`;\n        const uploadTask = this.storage.upload(path, admission.baccalaureat).snapshotChanges().pipe(switchMap(() => this.storage.ref(path).getDownloadURL()));\n        uploadTasks.push(uploadTask);\n      }\n      // Upload year documents files\n      admission.yearDocuments.forEach(yearDoc => {\n        yearDoc.documents.forEach(doc => {\n          if (doc.file) {\n            const path = `${admission.uid}/${yearDoc.year}/${doc.file.name}`;\n            const uploadTask = this.storage.upload(path, doc.file).snapshotChanges().pipe(switchMap(() => this.storage.ref(path).getDownloadURL()));\n            uploadTasks.push(uploadTask);\n          }\n        });\n      });\n      return from(Promise.all(uploadTasks)).pipe(switchMap(downloadURLs => {\n        let baccalaureatURL = null;\n        if (admission.baccalaureat) {\n          baccalaureatURL = downloadURLs.shift(); // Extract the first URL for baccalaureat\n        }\n        const yearDocuments = admission.yearDocuments.map(yearDoc => ({\n          year: yearDoc.year,\n          documents: yearDoc.documents.map(() => ({\n            description: '',\n            file: downloadURLs.shift() // Extract the next URL for each document\n          }))\n        }));\n        const docData = {\n          uid: admission.uid,\n          degreeLevel: admission.degreeLevel,\n          baccalaureat: baccalaureatURL,\n          yearDocuments: yearDocuments.map((yearDoc, yearIndex) => ({\n            year: yearDoc.year,\n            documents: yearDoc.documents.map((doc, docIndex) => ({\n              description: admission.yearDocuments[yearIndex].documents[docIndex].description,\n              file: doc.file\n            }))\n          }))\n        };\n        return from(admissionRef.set(docData));\n      }));\n    }\n    static #_ = this.ɵfac = function AdmissionService_Factory(t) {\n      return new (t || AdmissionService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireStorage));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdmissionService,\n      factory: AdmissionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AdmissionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}