{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { sidenavOptions } from '../components/data/nav.data';\nimport { AuthenticationService } from '../../landing/services/authentication.service';\nimport { Router } from '@angular/router';\nlet HomeComponent = class HomeComponent {\n  constructor(changeDetectorRef, media, authenticationService, router) {\n    this.authenticationService = authenticationService;\n    this.router = router;\n    this.fillerNav = sidenavOptions;\n    this.mobileQuery = media.matchMedia('(max-width: 1000px)');\n    this.isSidenavOpened = !this.mobileQuery.matches; // Set initial state based on screen size\n    this._mobileQueryListener = () => {\n      changeDetectorRef.detectChanges();\n      this.isSidenavOpened = !this.mobileQuery.matches; // Update state on screen size change\n    };\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n  ngOnDestroy() {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  trackByFn(index, item) {\n    return index;\n  }\n  signOut() {\n    this.authenticationService.logout().then(() => {\n      // Rediriger vers la page de connexion ou autre\n      this.router.navigate(['/']);\n    }).catch(error => {\n      console.error('Erreur de d√©connexion', error);\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n}), __metadata(\"design:paramtypes\", [ChangeDetectorRef, MediaMatcher, AuthenticationService, Router])], HomeComponent);\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}