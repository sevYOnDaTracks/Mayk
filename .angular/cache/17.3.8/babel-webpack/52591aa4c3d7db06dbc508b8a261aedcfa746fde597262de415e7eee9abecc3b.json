{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nfunction LoginComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Connexion\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LoginComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 22);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(auth, router, fb, snackBar) {\n      this.auth = auth;\n      this.router = router;\n      this.fb = fb;\n      this.snackBar = snackBar;\n      this.loading = false;\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    loginWithEmail() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        const {\n          email,\n          password\n        } = this.loginForm.value;\n        this.auth.loginWithEmail(email, password).then(() => {\n          this.snackBar.open('Connection réussie', 'ok');\n          this.router.navigate(['/admin/']);\n        }).catch(error => {\n          this.snackBar.open('Login failed');\n          console.error('Login failed', error);\n        }).finally(() => {\n          this.loading = false;\n        });\n      } else {\n        this.snackBar.open('Veuillez renseigner tous les champs !', 'ok');\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 30,\n      vars: 4,\n      consts: [[\"loadingTemplate\", \"\"], [1, \"container-fluid\", \"d-flex\", \"flex-column\", \"vh-100\"], [1, \"row\", \"no-gutter\", \"flex-grow-1\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"col-md-6\", \"d-flex\", \"align-items-center\", \"justify-content-center\", \"p-5\", \"bg-white\"], [1, \"login-card\"], [1, \"text-center\", \"mb-4\"], [\"src\", \"assets/images/landing/lOGO_d/logo.png\", \"alt\", \"Logo\", 1, \"logo\", \"mb-4\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Mot de passe\", 1, \"form-control\"], [1, \"form-check\", \"text-center\", \"form-check-primary\", \"py-1\", \"text-right\"], [\"href\", \"\", 1, \"text-muted\", \"text-decoration-underline\", \"font-size-14\"], [1, \"form-check\", \"form-check-primary\", \"py-1\"], [\"type\", \"checkbox\", \"id\", \"rememberMe\", 1, \"form-check-input\"], [\"for\", \"rememberMe\", 1, \"form-check-label\"], [1, \"mt-3\", \"d-flex\", \"flex-column\", \"align-items-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mb-4\", 2, \"width\", \"100%\", 3, \"disabled\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"mt-4\", \"text-center\"], [1, \"text-muted\", \"mb-0\"], [\"routerLink\", \"/register\", 1, \"text-decoration-underline\"], [\"diameter\", \"24\", \"color\", \"\", 1, \"spinner\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5);\n          i0.ɵɵelement(5, \"img\", 6);\n          i0.ɵɵelementStart(6, \"h2\");\n          i0.ɵɵtext(7, \"Welcome Back !\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.loginWithEmail());\n          });\n          i0.ɵɵelementStart(9, \"div\", 8);\n          i0.ɵɵelement(10, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 8);\n          i0.ɵɵelement(12, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 11)(14, \"a\", 12);\n          i0.ɵɵtext(15, \"Mot de passe oubli\\u00E9 ?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 13);\n          i0.ɵɵelement(17, \"input\", 14);\n          i0.ɵɵelementStart(18, \"label\", 15);\n          i0.ɵɵtext(19, \"Se rappeller\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 16)(21, \"button\", 17);\n          i0.ɵɵtemplate(22, LoginComponent_ng_container_22_Template, 2, 0, \"ng-container\", 18)(23, LoginComponent_ng_template_23_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 19)(26, \"p\", 20);\n          i0.ɵɵtext(27, \"Vous n'avez pas de compte ? \");\n          i0.ɵɵelementStart(28, \"a\", 21);\n          i0.ɵɵtext(29, \"S'inscrire\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          const loadingTemplate_r2 = i0.ɵɵreference(24);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading)(\"ngIfElse\", loadingTemplate_r2);\n        }\n      },\n      dependencies: [i5.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i6.MatProgressSpinner],\n      styles: [\"@charset \\\"UTF-8\\\";body[_ngcontent-%COMP%]{font-family:Helvetica Neue,sans-serif}.container-fluid[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100vh}.navbar[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 2px 4px #0000001a}.bg-image[_ngcontent-%COMP%]{background:linear-gradient(120deg,#1e3c72,#059856);color:#fff;display:flex;align-items:center;justify-content:center;position:relative}.login-card[_ngcontent-%COMP%]{width:100%;max-width:500px;background:#fff;padding:2rem;border-radius:8px;box-shadow:0 4px 8px #0000001a}.logo[_ngcontent-%COMP%]{width:100px;height:100px;border-radius:50%;object-fit:cover}.info-card[_ngcontent-%COMP%]{text-align:center;color:#fff}.info-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:1rem}.illustration[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:100%;height:auto}.form-control[_ngcontent-%COMP%]{border-radius:4px;padding:10px;font-size:16px;margin-bottom:1rem}.btn-primary[_ngcontent-%COMP%]{background-color:#f8c00e;border:none;padding:10px 20px;font-size:16px;border-radius:4px;width:100%;color:#000}.btn-primary[_ngcontent-%COMP%]:hover{background-color:#d1a800}.text-muted[_ngcontent-%COMP%]{color:#6c757d}.text-decoration-underline[_ngcontent-%COMP%]{text-decoration:underline}.mat-spinner[_ngcontent-%COMP%]{color:#000}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}