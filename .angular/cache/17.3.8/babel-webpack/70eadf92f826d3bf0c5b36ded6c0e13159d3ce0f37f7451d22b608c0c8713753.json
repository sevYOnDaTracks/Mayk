{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../landing/services/authentication.service';\nlet AdmissionComponent = class AdmissionComponent {\n  constructor(fb, auth) {\n    this.fb = fb;\n    this.auth = auth;\n    this.countries = [{\n      value: 'FRANCE',\n      viewValue: 'France'\n    }, {\n      value: 'CANADA',\n      viewValue: 'Canada'\n    }];\n    this.admissionTypes = [{\n      value: 'CAMPUS_FRANCE',\n      viewValue: 'Campus France / Licence Master Doctorat (LMD)'\n    }, {\n      value: 'PARCOURS_SUP',\n      viewValue: 'Parcours Sup / BTS'\n    }];\n    this.educationLevels = [{\n      value: 'BAC+1',\n      viewValue: 'BAC+1'\n    }, {\n      value: 'BAC+2',\n      viewValue: 'BAC+2'\n    }, {\n      value: 'BAC+3',\n      viewValue: 'BAC+3'\n    }, {\n      value: 'BAC+4',\n      viewValue: 'BAC+4'\n    }, {\n      value: 'BAC+5',\n      viewValue: 'BAC+5'\n    }];\n    // Ajoutez ces propriétés pour stocker les noms de fichiers\n    this.fileNames = {};\n    this.bacFileName = '';\n    this.campusFranceFileName = '';\n  }\n  ngOnInit() {\n    this.educationForm = this.fb.group({\n      country: ['', Validators.required],\n      admissionType: ['', Validators.required],\n      educationLevel: ['', Validators.required],\n      bacAverage: [''],\n      termAverage2nd1: [''],\n      termAverage2nd2: [''],\n      termAverage2nd3: [''],\n      termAveragePremiere1: [''],\n      termAveragePremiere2: [''],\n      termAveragePremiere3: [''],\n      termAverageTerminale1: [''],\n      termAverageTerminale2: [''],\n      termAverageTerminale3: [''],\n      averageYear1Sem1: [''],\n      averageYear1Sem2: [''],\n      commentYear1Sem1: [''],\n      commentYear1Sem2: [''],\n      averageYear2Sem1: [''],\n      averageYear2Sem2: [''],\n      commentYear2Sem1: [''],\n      commentYear2Sem2: [''],\n      averageYear3Sem1: [''],\n      averageYear3Sem2: [''],\n      commentYear3Sem1: [''],\n      commentYear3Sem2: [''],\n      averageYear4Sem1: [''],\n      averageYear4Sem2: [''],\n      commentYear4Sem1: [''],\n      commentYear4Sem2: [''],\n      averageYear5Sem1: [''],\n      averageYear5Sem2: [''],\n      commentYear5Sem1: [''],\n      commentYear5Sem2: ['']\n    });\n    this.user$ = this.auth.authenticatedUser$;\n    this.user$.subscribe(user => {\n      if (user) {\n        // Votre logique utilisateur ici\n      }\n    });\n  }\n  onCountryChange(value) {\n    this.selectedCountry = value;\n    this.educationForm.get('admissionType').reset();\n    this.selectedAdmissionType = null;\n    this.selectedLevel = null;\n    this.educationForm.get('educationLevel').reset();\n  }\n  onAdmissionTypeChange(value) {\n    this.selectedAdmissionType = value;\n    this.selectedLevel = null;\n    this.educationForm.get('educationLevel').reset();\n  }\n  onEducationLevelChange(value) {\n    this.selectedLevel = value;\n  }\n  getYears(level) {\n    const year = parseInt(level.replace('BAC+', ''), 10);\n    return Array.from({\n      length: year\n    }, (_, i) => i + 1);\n  }\n  onFileSelected(event, key) {\n    const input = event.target;\n    if (input.files.length > 0) {\n      const file = input.files[0];\n      this.fileNames[key] = file.name;\n    }\n  }\n  onBacFileSelected(event) {\n    const input = event.target;\n    if (input.files.length > 0) {\n      const file = input.files[0];\n      this.bacFileName = file.name;\n    }\n  }\n  onCampusFranceFileSelected(event) {\n    const input = event.target;\n    if (input.files.length > 0) {\n      const file = input.files[0];\n      this.campusFranceFileName = file.name;\n    }\n  }\n};\n__decorate([ViewChild('bacFileInput'), __metadata(\"design:type\", ElementRef)], AdmissionComponent.prototype, \"bacFileInput\", void 0);\n__decorate([ViewChild('campusFranceFileInput'), __metadata(\"design:type\", ElementRef)], AdmissionComponent.prototype, \"campusFranceFileInput\", void 0);\nAdmissionComponent = __decorate([Component({\n  selector: 'app-admission',\n  templateUrl: './admission.component.html',\n  styleUrls: ['./admission.component.scss']\n}), __metadata(\"design:paramtypes\", [FormBuilder, AuthenticationService])], AdmissionComponent);\nexport { AdmissionComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}