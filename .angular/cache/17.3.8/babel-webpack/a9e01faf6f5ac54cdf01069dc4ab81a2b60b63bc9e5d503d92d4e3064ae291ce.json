{"ast":null,"code":"import { ClassProvider, FactoryProvider, InjectionToken } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport function _window() {\n  return window;\n}\nexport const WINDOW = new InjectionToken(\"WindowToken\");\nexport class WindowRef {\n  get nativeWindow() {\n    throw new Error(\"Not implemented.\");\n  }\n}\nexport let BrowserWindowRef = /*#__PURE__*/(() => {\n  class BrowserWindowRef extends WindowRef {\n    constructor() {\n      super();\n    }\n    get nativeWindow() {\n      return _window();\n    }\n    static #_ = this.ɵfac = function BrowserWindowRef_Factory(t) {\n      return new (t || BrowserWindowRef)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BrowserWindowRef,\n      factory: BrowserWindowRef.ɵfac\n    });\n  }\n  return BrowserWindowRef;\n})();\nconst browserWindowProvider = {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n};\nexport const windowProvider = {\n  provide: WINDOW,\n  useFactory: _window,\n  deps: []\n};\nexport const WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}