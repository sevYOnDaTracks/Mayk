{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../landing/services/authentication.service';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\nimport { AdmissionService } from '../../services/admission.service';\nimport { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../landing/services/authentication.service\";\nimport * as i3 from \"../../services/admission.service\";\nimport * as i4 from \"@angular/fire/compat/storage\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nfunction AdmissionComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const level_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", level_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(level_r1);\n  }\n}\nfunction AdmissionComponent_div_11_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 12)(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"add_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 13)(8, \"div\")(9, \"mat-form-field\", 1)(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 8);\n    i0.ɵɵelementStart(14, \"button\", 15)(15, \"mat-icon\");\n    i0.ɵɵtext(16, \"remove_circle\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const yearGroup_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_5_0 = yearGroup_r2.get(\"year\")) == null ? null : tmp_5_0.value);\n  }\n}\nfunction AdmissionComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Veuillez joindre tous les justificatifs :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"label\");\n    i0.ɵɵtext(5, \"Baccalaur\\u00E9at\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AdmissionComponent_div_11_div_7_Template, 17, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.yearDocuments.controls);\n  }\n}\nexport let AdmissionComponent = /*#__PURE__*/(() => {\n  class AdmissionComponent {\n    constructor(fb, authService, admissionService, storage) {\n      this.fb = fb;\n      this.authService = authService;\n      this.admissionService = admissionService;\n      this.storage = storage;\n      this.user = null;\n      this.degreeLevels = ['BAC+1', 'BAC+2', 'BAC+3', 'BAC+4', 'BAC+5'];\n      this.showAdditionalFields = false;\n      this.admissionForm = this.fb.group({\n        degreeLevel: ['', Validators.required],\n        baccalaureat: this.fb.group({\n          file: [null, Validators.required]\n        }),\n        yearDocuments: this.fb.array([])\n      });\n      this.admissionForm.get('degreeLevel')?.valueChanges.subscribe(value => {\n        this.onDegreeLevelChange(value);\n      });\n    }\n    ngOnInit() {\n      this.authService.authenticatedUser$.subscribe(user => {\n        this.user = user;\n      });\n    }\n    get yearDocuments() {\n      return this.admissionForm.get('yearDocuments');\n    }\n    onDegreeLevelChange(degreeLevel) {\n      this.showAdditionalFields = !!degreeLevel;\n      this.clearYearDocuments();\n      const numYears = parseInt(degreeLevel.replace('BAC+', ''), 10);\n      for (let i = 1; i <= numYears; i++) {\n        this.addYear(i);\n      }\n    }\n    clearYearDocuments() {\n      while (this.yearDocuments.length) {\n        this.yearDocuments.removeAt(0);\n      }\n    }\n    addYear(year) {\n      const yearGroup = this.fb.group({\n        year: `Année ${year}`,\n        documents: this.fb.array([])\n      });\n      this.yearDocuments.push(yearGroup);\n    }\n    addDocument(yearGroup) {\n      const documents = yearGroup.get('documents');\n      documents.push(this.fb.group({\n        description: ['', Validators.required],\n        file: [null, Validators.required]\n      }));\n    }\n    removeDocument(yearGroup, index) {\n      const documents = yearGroup.get('documents');\n      documents.removeAt(index);\n    }\n    onFileChange(event, formGroup) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (!file || !this.user) {\n        return;\n      }\n      const filePath = `admissions/${this.user.uid}/${file.name}`;\n      const fileRef = this.storage.ref(filePath);\n      const task = this.storage.upload(filePath, file);\n      task.snapshotChanges().pipe(finalize(() => {\n        fileRef.getDownloadURL().subscribe(url => {\n          formGroup.get('file')?.setValue(url);\n        });\n      })).subscribe();\n    }\n    onSubmit() {\n      if (this.admissionForm.invalid || !this.user) {\n        return;\n      }\n      const admission = {\n        userId: this.user.uid,\n        degreeLevel: this.admissionForm.value.degreeLevel,\n        documents: this.admissionForm.value.yearDocuments.reduce((acc, yearGroup) => {\n          const year = yearGroup.year;\n          const docs = yearGroup.documents.map(doc => ({\n            description: doc.description,\n            fileUrl: doc.file\n          }));\n          acc[year] = docs;\n          return acc;\n        }, {})\n      };\n      this.admissionService.addAdmission(admission).then(() => {\n        // Handle successful submission\n      }).catch(error => {\n        // Handle error\n      });\n    }\n    static #_ = this.ɵfac = function AdmissionComponent_Factory(t) {\n      return new (t || AdmissionComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.AdmissionService), i0.ɵɵdirectiveInject(i4.AngularFireStorage));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdmissionComponent,\n      selectors: [[\"app-admission\"]],\n      decls: 14,\n      vars: 4,\n      consts: [[3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"fill\", 1, \"w-100\"], [\"formControlName\", \"degreeLevel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"], [1, \"mb-3\"], [\"type\", \"file\"], [\"formArrayName\", \"yearDocuments\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"yearDocuments\"], [1, \"mb-3\", 3, \"formGroupName\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"type\", \"button\"], [\"formArrayName\", \"documents\"], [\"matInput\", \"\", \"formControlName\", \"description\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", \"type\", \"button\"]],\n      template: function AdmissionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n          i0.ɵɵtext(3, \"Admission Form\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function AdmissionComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"mat-form-field\", 1)(7, \"mat-label\");\n          i0.ɵɵtext(8, \"Niveau d'\\u00E9tude\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"mat-select\", 2);\n          i0.ɵɵtemplate(10, AdmissionComponent_mat_option_10_Template, 2, 2, \"mat-option\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, AdmissionComponent_div_11_Template, 8, 1, \"div\", 4);\n          i0.ɵɵelementStart(12, \"button\", 5);\n          i0.ɵɵtext(13, \"Submit\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.admissionForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.degreeLevels);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showAdditionalFields);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.admissionForm.invalid || !ctx.user);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.MatIcon, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i7.MatFormField, i7.MatLabel, i8.MatButton, i8.MatIconButton, i9.MatInput, i10.MatCard, i10.MatCardContent, i10.MatCardHeader, i10.MatCardTitle, i11.MatSelect, i12.MatOption],\n      styles: [\"mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:15px}input[type=file][_ngcontent-%COMP%]{margin-bottom:15px}\"]\n    });\n  }\n  return AdmissionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}